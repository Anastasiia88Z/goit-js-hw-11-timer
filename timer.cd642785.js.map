{"version":3,"sources":["timer.js"],"names":["CountdownTimer","constructor","selector","targetDate","refs","days","document","querySelector","hours","mins","secs","setInterval","startDate","Date","now","time","getTimeComponents","updateClockface","pad","Math","floor","value","String","padStart","textContent","timer"],"mappings":";;;AAyDA,aAzDA,QAAA,oBAGA,MAAMA,EAEJC,aAAY,SAACC,EAAD,WAAWC,IAChBD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,KAAO,CACVC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,KAAMJ,SAASC,cAAc,wBAI/BI,YAAY,KACFC,MAAAA,EAAYC,KAAKC,MACjBC,EAAO,KAAKZ,WAAaS,GACzB,KAAEP,EAAF,MAAQG,EAAR,KAAeC,EAAf,KAAqBC,GAAS,KAAKM,kBAAkBD,GAEtDE,KAAAA,gBAAgB,KAAKD,kBAAkBD,KAE3C,KAMNC,kBAAkBD,GAUR,MAAA,CAAEV,KARE,KAAKa,IAAIC,KAAKC,MAAML,EAAQ,QAQxBP,MANH,KAAKU,IAAIC,KAAKC,MAAOL,EAAQ,MAAyB,OAM5CN,KAJV,KAAKS,IAAIC,KAAKC,MAAOL,EAAQ,KAAoB,MAIjCL,KAFhB,KAAKQ,IAAIC,KAAKC,MAAOL,EAAQ,IAAc,OAO7DG,IAAIG,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCN,iBAAgB,KAACZ,EAAD,MAAOG,EAAP,KAAcC,EAAd,KAAoBC,IAE7BN,KAAAA,KAAKC,KAAKmB,eAAiBnB,IAC3BD,KAAAA,KAAKI,MAAMgB,eAAiBhB,IAC5BJ,KAAAA,KAAKK,KAAKe,eAAiBf,IAC3BL,KAAAA,KAAKM,KAAKc,eAAiBd,KAIlC,MAAMe,EAAQ,IAAIzB,EAAe,CAC/BE,SAAU,WACVC,WAAY,IAAIU,KAAK","file":"timer.cd642785.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\n\nclass CountdownTimer {\n\n  constructor({selector, targetDate}) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this.refs = {\n      days: document.querySelector('[data-value=\"days\"]'),\n      hours: document.querySelector('[data-value=\"hours\"]'),\n      mins: document.querySelector('[data-value=\"mins\"]'),\n      secs: document.querySelector('[data-value=\"secs\"]'),\n    }\n  \n\n    setInterval(() => {\n        const startDate = Date.now();\n        const time = this.targetDate - startDate;\n        const { days, hours, mins, secs } = this.getTimeComponents(time);\n\n        this.updateClockface(this.getTimeComponents(time));\n\n      }, 1000);\n   }\n\n// - Принимает время в миллисекундах\n// - Вычисляет сколько в них вмещается дней, часов, минут, секунд\n// - Возвращает обьект со свойствами days, hours, mins, secs\n   getTimeComponents(time) {\n  \n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n  \n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n   \n    const mins =  this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n      \n    const secs =  this.pad(Math.floor((time % (1000 * 60)) / 1000));\n  \n      return { days, hours, mins, secs };\n  }\n\n// Принимает число, приводит к строке и добавляет в начало 0 если число меньше 2 знаков\n// 7=>07, 1=>01, 12=>12\npad(value) {\n  return String(value).padStart(2, \"0\");\n}\n\nupdateClockface({days, hours, mins, secs}) {\n  \n  this.refs.days.textContent = `${days}`;\n  this.refs.hours.textContent = `${hours}`;\n  this.refs.mins.textContent = `${mins}`;\n  this.refs.secs.textContent = `${secs}`;\n}\n};\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date(\"Jul 17, 2021\")\n});\n"]}